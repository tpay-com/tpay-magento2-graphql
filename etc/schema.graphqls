type Query {
    tpayPaymentMethods: [TpayPaymentMethod] @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Query\\PaymentMethods") @doc(description: "Provides Tpay available payment methods with additional data like images, etc.") @cache(cacheable: false)
    tpayStoredCards: [TpayStoredCard] @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Query\\StoredTokens") @doc(descriptions: "Provides list of stored card tokens") @cache(cacheable: false)
    tpayBlikStoredAliases: [TpayStoredBlikAlias] @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Query\\StoredBlikAliases") @doc(description: "Provides list of stored blik aliases") @cache(cacheable: false)
}

type Mutation {
    tpayCreateTransaction(input: CreateTpayTransactionInput): CreateTpayTransactionOutput @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Mutation\\CreateTransaction")
    tpayCardPayment(input: CardPaymentInput): TpayPayOutput @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Mutation\\CardPayment")
    tpayStoredCardPayment(input: StoredCardPaymentInput): TpayPayOutput @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Mutation\\StoredCardPayment")
    tpayBlikPayment(input: BlikPaymentInput): TpayPayOutput @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Mutation\\BlikPayment")
    tpayBlikAliasPayment(input: BlikAliasPaymentInput): TpayPayOutput @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\Mutation\\BlikAliasPayment")
}

type TpayStoredBlikAlias @doc(description: "Stored blik alias") {
    alias: String @doc(description: "Blik alias")
}

type TpayPaymentMethod @doc(description: "The standard output of tpayPaymentMethods Query, OpenApi Config should be valid") {
    id: Int @doc(description: "Method ID")
    fullName: String @doc(description: "Method name")
    image: String @doc(description: "Method image URL")
    available: Boolean @doc(description: "Is channel available right now")
    onlinePayment: Boolean @doc(description: "Determines if instant payment can be done")
    instantRedirection: Boolean @doc(description: "Determines if instant user redirect has to be processed")
    groups: [ChannelGroups] @doc(description: "List of channel groups")
    constraints: [ChannelConstraints] @doc(description: "List of constraints")
}

type TpayStoredCard @doc(description: "Stored tokens"){
    tokenId: Int! @doc(description: "Part of TpayPaymentMethod")
    token: String! @doc(description: "Part of TpayPaymentMethod")
    cardShortCode: String! @doc(description: "Part of TpayPaymentMethod")
    vendor: String! @doc(description: "Part of TpayPaymentMethod")
    crc: String! @doc(description: "Part of TpayPaymentMethod")
}

type ChannelGroups @doc(description: "Part of TpayPaymentMethod") {
    id: Int @doc(description: "ID")
    name: String @doc(description: "Group name")
    image: Image @doc(description: "IMG object")
}

type Image {
    url: String @doc(description: "Image URL")
}

type ChannelConstraints @doc(description: "Part of TpayPaymentMethod") {
    field: String @doc(description: "Field to be checked in this condition")
    type: String @doc(description: "Type like min or max")
    value: String @doc(description: "Value, can be an amount or value")
}

input CardPaymentInput {
    incrementId: String! @doc(description: "Magento increment ID for order")
    transactionId: String @doc(description: "Tpay transaction ta_xxxx ID - can be null for OriginApi card sales")
    cardData: String! @doc(description: "Encrypted card data, example of encryption algorithm can be found in tpaycom/magento2basic")
    storeCard: Boolean! @doc(description: "Users decision if card token can be stored in your app")
    shortCode: String @doc(description: "Last card charcacter, for example 0000")
    cardVendor: String @doc(description: "Card vendor")
}

input StoredCardPaymentInput {
    incrementId: String! @doc(description: "Magento increment ID for order")
    transactionId: String @doc(description: "Tpay transaction ta_xxxx ID - can be null for OriginApi card sales")
    tokenId: String! @doc(description: "Token ID from TpayStoredCard type")
}

input BlikAliasPaymentInput {
    incrementId: String! @doc(description: "Magento increment ID for order")
    transactionId: String! @doc(description: "Tpay transaction ta_xxxx ID")
    blikAlias: String! @doc(description: "BLIK alias")
}

input BlikPaymentInput {
    incrementId: String! @doc(description: "Magento increment ID for order")
    transactionId: String! @doc(description: "Tpay transaction ta_xxxx ID")
    blikCode: String! @doc(description: "BLIK code - use only of code or token fields")
}

type CreateTpayTransactionOutput {
    transaction: String
    redirectUrl: String
}

input CreateTpayTransactionInput {
    real_order_id: String!
}

type TpayPayOutput {
    transaction: String
    result: String
    redirectUrl: String!
}

input PaymentMethodInput {
    tpay: TpayInput
}

input TpayInput {
    channel: Int @doc(description: "Set channel ID, group ID or just ignore it to allow user to choose bank on Tpay paywall")
    group: Int
    accept_tos: Boolean!
}


type Order {
    tpay: CreateTpayTransactionOutput @doc(description: "Tpay transaction output") @resolver(class: "Tpay\\Magento2GraphQl\\Model\\Resolver\\CreateTransaction")
}
